name: Build and Release Kernel

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          pip3 install --upgrade pip
          pip3 install git-repo

      - name: Set up Build Directory
        run: |
          mkdir -p builds
          rm -rf builds/*
          cd builds
          export ROOT_DIR="OP12-A15-$(date +'%Y-%m-%d-%I-%M-%p')-release"
          mkdir "$ROOT_DIR"
          cd "$ROOT_DIR"

      - name: Clone Repositories
        run: |
          git clone https://github.com/TheWildJames/AnyKernel3.git -b android14-5.15
          git clone https://gitlab.com/simonpunk/susfs4ksu.git -b gki-android14-6.1
          git clone https://github.com/TheWildJames/kernel_patches.git

      - name: Fetch Kernel Sources
        run: |
          mkdir oneplus12_v
          cd oneplus12_v
          repo init -u https://github.com/OnePlusOSS/kernel_manifest.git -b oneplus/sm8650 -m oneplus12_v.xml
          repo sync -j$(nproc)
          rm -rf ./kernel_platform/common/android/abi_gki_protected_exports_*

      - name: Add KernelSU
        run: |
          cd oneplus12_v/kernel_platform
          curl -LSs "https://raw.githubusercontent.com/rifsxd/KernelSU/next/kernel/setup.sh" | bash -s next
          cd KernelSU-Next/kernel
          sed -i 's/ccflags-y += -DKSU_VERSION=16/ccflags-y += -DKSU_VERSION=12113/' ./Makefile

      - name: Add SUSFS
        run: |
          cd oneplus12_v/kernel_platform
          cp ../../susfs4ksu/kernel_patches/KernelSU/10_enable_susfs_for_ksu.patch ./KernelSU-Next/
          cp ../../susfs4ksu/kernel_patches/50_add_susfs_in_gki-android14-6.1.patch ./common/
          cp ../../susfs4ksu/kernel_patches/fs/susfs.c ./common/fs/
          cp ../../susfs4ksu/kernel_patches/include/linux/susfs.h ./common/include/linux/
          cd KernelSU-Next
          patch -p1 < 10_enable_susfs_for_ksu.patch || true
          cd ../common
          patch -p1 < 50_add_susfs_in_gki-android14-6.1.patch || true
          sed -i '/obj-\$(CONFIG_KSU_SUSFS_SUS_SU) += sus_su.o/d' ./fs/Makefile
          cd ..
          patch -p1 -F 3 < ../kernel_patches/selinux.c_fix.patch
          patch -p1 -F 3 < ../kernel_patches/apk_sign.c_fix.patch
          patch -p1 --fuzz=3 < ../kernel_patches/Makefile_fix.patch

      - name: Configure Kernel
        run: |
          echo "CONFIG_KSU=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_SU=y" >> ./common/arch/arm64/configs/gki_defconfig

      - name: Build Kernel
        run: |
          sed -i '2s/check_defconfig//' ./kernel_platform/common/build.config.gki
          ./kernel_platform/oplus/build/oplus_build_kernel.sh pineapple gki
          cp ./out/dist/Image ../AnyKernel3/Image

      - name: Package Kernel
        run: |
          cd ../AnyKernel3
          export ZIP_NAME="Anykernel3-OP-A15-android14-6.1-KernelSU-SUSFS-$(date +'%Y-%m-%d-%H-%M-%S').zip"
          zip -r "../$ZIP_NAME" ./*
          echo "ZIP_NAME=$ZIP_NAME" >> $GITHUB_ENV

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG_NAME="v$(date +'%Y.%m.%d-%H%M%S')"
          RELEASE_NAME="OP12 A15 android14-6.1 With KernelSU & SUSFS"
          ZIP_FILE=$(echo ${{ env.ZIP_NAME }})
          curl -X POST \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Content-Type: application/json" \
            -d "{
              \"tag_name\": \"$TAG_NAME\",
              \"name\": \"$RELEASE_NAME\",
              \"body\": \"Kernel release with KernelSU and SUSFS.\",
              \"draft\": false,
              \"prerelease\": false
            }" \
            https://api.github.com/repos/${{ github.repository }}/releases
          curl -X POST \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Content-Type: application/zip" \
            --data-binary @$ZIP_FILE \
            "$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/tags/$TAG_NAME | jq -r .upload_url | sed -e 's/{?name,label}/?name='${ZIP_FILE##*/}'/')"
